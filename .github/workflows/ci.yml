name: CI Docker Compose
on:
  push:
    branches:
      - '**'
  pull_request:
    branches:
      - '**'

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 15  # Добавляем таймаут

    env:
      REST_SERVER_PORT: 8080
      GRPC_SERVER_PORT: 50051
      POSTGRES_USER: root
      POSTGRES_PASSWORD: 123
      POSTGRES_DB: test
      POSTGRES_HOST: postgres
      POSTGRES_PORT: 5432
      PG_POOL_MAX: 10

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Verify docker-compose file
        run: |
          if [ ! -f docker-compose.yml ]; then
            echo "::error::docker-compose.yml not found!"
            ls -la
            exit 1
          fi

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Create .env file
        run: |
          cat <<EOT > .env
          REST_SERVER_PORT=$REST_SERVER_PORT
          GRPC_SERVER_PORT=$GRPC_SERVER_PORT
          POSTGRES_USER=$POSTGRES_USER
          POSTGRES_PASSWORD=$POSTGRES_PASSWORD
          POSTGRES_DB=$POSTGRES_DB
          POSTGRES_HOST=$POSTGRES_HOST
          POSTGRES_PORT=$POSTGRES_PORT
          PG_POOL_MAX=$PG_POOL_MAX
          EOT

      - name: Build and start services
        run: docker compose --env-file .env up --build -d

      - name: Wait for PostgreSQL
        run: |
          for i in {1..10}; do
            if docker compose exec -T postgres pg_isready -U $POSTGRES_USER -d $POSTGRES_DB; then
              echo "PostgreSQL is ready"
              exit 0
            fi
            sleep 5
          done
          echo "PostgreSQL did not become ready in time"
          docker compose logs
          exit 1

      - name: Check containers status
        run: |
          if [ "$(docker compose ps --services --filter 'status=running' | wc -l)" -ne "$(docker compose ps --services | wc -l)" ]; then
            echo "Some containers are not running"
            docker compose ps
            exit 1
          fi

      - name: Show logs if failed
        if: failure()
        run: docker compose logs

      - name: Shutdown
        if: always()
        run: docker compose down -v